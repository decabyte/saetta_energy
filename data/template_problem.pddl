; problem.pddl
;   this is auto-generated by the planner node
;   do not edit manually unless sure of it
;
; generated on: {{ time }}

(define (problem {{ problem_name }})

	; reference the domain domain
	(:domain {{ domain_name }})

    ; define the planning objects
	(:objects
    {% for obj_label, obj_type in objects %}
        {{ obj_label }} - {{ obj_type }}
    {% endfor %}

        wp0 - waypoint
		wp1 - waypoint
		wp2 - waypoint
		wp3 - waypoint
		wp4 - waypoint
	)

    {#  literal value expansion  #}
    {% macro literal_exp(name, values) %}
        ({{ name }} {{ ' '.join(values) }})
    {% endmacro %}


    ; define the initial planning state
	(:init
    {% for name, values in init_literals %}
        {{ literal_exp(name, values) }}
    {% endfor %}

    {% for function, number in init_fluents %}
        (= {{ literal_exp(function[0], function[1]) }} {{ number }})
    {% endfor %}
    )

    ; define the planning goal
	(:goal
		(and
        {% for name, values in goals %}
            {{ literal_exp(name, values) }}
        {% endfor %}
            ()
 		)
	)

	(:metric minimize (total-time))
)